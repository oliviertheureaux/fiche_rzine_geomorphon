labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "left")
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar()
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 0.5)
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 2)
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 3)
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 4)
tm_shape(r) +
tm_raster(style= "cat",
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 4, breaks = 2)
tm_shape(r) +
tm_raster(style= "cat",
labels = c("Plan", "Sommet", "Crête", "Haut de versant", "Eperon", "Pente", "Creux de versant", "Bas de versant", "Vallée", "Dépression"),
palette = c("#dcdcdc", "#380000", "#c80000", "#ff5014", "#fad23c", "#ffff3c", "#b4e614", "#3cfa96", "#0000ff", "#000038"),
title="Géomorphons du Ribérot") +
tm_compass(type = "4star", size = 1, position = "right")+
tm_scale_bar(width = 4, breaks = 2)
knitr::opts_chunk$set(echo = TRUE)
library(tmap)
mnt <- raster("mnt_riberot.tif")
plot(mnt)
## Traitement Geomorphons ----
dem_geomorphons = qgis_run_algorithm("saga:geomorphons", # attention, il faut que l'extension soit active dans QGIS
DEM = mnt,
THRESHOLD = 1,
RADIUS = 100,
METHOD = 1,
GEOMORPHONS = paste0("geomorphon_riberot_5m_LD100", ".tif"))
geomorphon <- raster("geomorphon_riberot_5m_LD100.tif")
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_riberot_5m_LD100", ".csv"))
r <- raster("geomorphon_riberot_5m_LD100.tif")
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/fiche_rzine_geomorphon")
library(terra)
r <- raster("data/geomorphon_riberot_5m_LD100.tif")
crs(r) <- "EPSG:2154"
# Packages
library(raster)
library(qgisprocess)
library(raster)
library(terra)
library(stars)
library(sf)
library(mapsf)
library(dplyr)
# Sélection du BV via la GeoJSON ----
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/RZINE")
bv <- st_read("BassinVersantTopographique.json")
riberot <- bv %>% filter(bv$TopoOH == "Le Ribérot")
plot(riberot)
st_write(riberot, layer = "riberot.shp")
st_write(dsn = riberot, layer = "riberot.shp")
st_write(dsn = riberot, layer = "riberot.shp")
st_write(obj = riberot, layer = "riberot.shp")
?st_write
st_write(riberot, layer = "riberot.shp")
st_write(riberot, dsn = "data/", layer = "riberot.shp")
st_write(riberot, dsn = "/data/", layer = "riberot.shp")
st_write(riberot, dsn = "/data", layer = "riberot.shp")
st_write(riberot, dsn = "data", layer = "riberot.shp")
st_write(riberot, dsn = "fiche_rzine_geomorphon/data", layer = "riberot.shp")
st_write(riberot, dsn = "fiche_rzine_geomorphon/data/", layer = "riberot.shp")
st_write(riberot, "data/riberot.shp")
riberot
str(riberot)
st_write(riberot, "data/riberot.shp")
?st_write
st_write(riberot, paste0(getwd(), "/", "riberot.shp"))
st_read("riberot.Shp")
plot(riberot)
riberot
riberot
riberot_shp <- st_read("riberot.Shp")
plot(riberot_shp)
riberot_shp
riberot_shp <- st_read("riberot.Shp")
plot(riberot_shp)
riberot <- bv %>% filter(bv$TopoOH == "Le Ribérot")
plot(riberot)
riberot <- bv %>% filter(bv$TopoOH == "Le Ribérot")
bv <- st_read("BassinVersantTopographique.json")
riberot <- bv %>% filter(bv$TopoOH == "Le Ribérot")
plot(riberot)
st_write(riberot, paste0(getwd(), "/", "riberot.shp"))
riberot_shp <- st_read("riberot.Shp")
plot(riberot_shp)
# Création du raster virtuel Drac ----
setwd("C:/Users/thier/Downloads/mnt_05")
c <- "C:/Users/thier/Downloads/mnt_05"
v <- "C:/Users/thier/Downloads/new.vrt" # name of virtual raster
ras_lst <- list.files(c, full.names = T, pattern = ".asc$", recursive=T) # sélection de toutes les dalles
head(ras_lst)
terra::vrt(ras_lst, v, overwrite = T) # création du raster virtuel
ras <- read_stars(v)
st_crs(ras) = "EPSG:2154"
plot(ras, main = "dep 05")
plot(riberot_shp, add=T)
plot(riberot_shp, add=T, col="red")
mnt <- st_crop(ras, riberot_shp)
ras
riberot_shp
crs(riberot_shp) <- "epsg:2154"
st_crs(riberot_shp) <- "epsg:2154"
mnt <- st_crop(ras, riberot_shp)
plot(mnt)
# Création du raster virtuel Drac ----
setwd("C:/Users/thier/Downloads/mnt_riberot")
c <- "C:/Users/thier/Downloads/mnt_riberot"
v <- "C:/Users/thier/Downloads/new.vrt" # name of virtual raster
ras_lst <- list.files(c, full.names = T, pattern = ".asc$", recursive=T) # sélection de toutes les dalles
head(ras_lst)
terra::vrt(ras_lst, v, overwrite = T) # création du raster virtuel
ras <- read_stars(v)
st_crs(ras) = "EPSG:2154"
plot(ras, main = "dep 09")
plot(riberot_shp, add=T, col="red")
mnt <- st_crop(ras, riberot_shp)
plot(mnt)
ras
riberot_shp
ras
ras <- raster(v)
ras
st_crs(ras) = "EPSG:2154"
crs(ras) = "EPSG:2154"
plot(ras, main = "dep 09")
plot(riberot_shp, add=T, col="red")
mnt <- st_crop(ras, riberot_shp)
mnt <- crop(ras, riberot_shp)
riberot_shp
mnt <- crop(ras, riberot_shp)
riberot_shp <- st_transform(riberot_shp, crs = "2154")
riberot_shp <- st_transform(riberot_shp, crs = "epsg:2154")
mnt <- crop(ras, riberot_shp)
plot(riberot_shp, add=T, col="red")
plot(riberot_shp)
riberot_shp <- st_transform(riberot_shp, crs = "epsg:2154")
riberot_shp
riberot_shp <- st_transform(riberot_shp, crs = "epsg:4326")
plot(mnt)
# Sélection du BV via la GeoJSON ----
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/RZINE")
bv <- st_read("BassinVersantTopographique.json")
riberot <- bv %>% filter(bv$TopoOH == "Le Ribérot")
plot(riberot)
riberot
riberot_proj <- st_transform(riberot, 2154)
plot(riberot_proj)
st_write(riberot_proj, paste0(getwd(), "/", "riberot.shp"), overwrite=T)
st_write(riberot_proj, paste0(getwd(), "/", "riberot.shp"))
st_write(riberot_proj, paste0(getwd(), "/", "riberot.shp"))
riberot_shp <- st_read("riberot.shp")
plot(riberot_shp)
plot(ras, main = "dep 09")
plot(riberot_shp, add=T, col="red")
mnt <- crop(ras, riberot_shp)
plot(mnt)
mnt <- st_crop(ras, riberot_shp)
ras <- read_stars(v)
ras
plot(ras, main = "dep 09")
plot(riberot_shp, add=T, col="red")
mnt <- st_crop(ras, riberot_shp)
crs(ras) = "EPSG:2154" # à faire ?
st_crs(ras) = "EPSG:2154" # à faire ?
mnt <- st_crop(ras, riberot_shp)
plot(mnt)
list.files()
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/fiche_rzine_geomorphon")
list.files()
geomorphon <- raster("geomorphon_riberot_5m_LD100.tif")
geomorphon <- raster("data/geomorphon_riberot_5m_LD100.tif")
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_riberot_5m_LD100", ".csv"))
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0(getwd(), "data/", "rapport_geomorphon_riberot_5m_LD100", ".csv"))
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_riberot_5m_LD100v2", ".csv"))
riberot <- read.csv("data/rapport_geomorphon_riberot_5m_LD100.csv")
list.files()
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot
colnames(yvette) <- c("Geomorphon", "Pixel", "Superficie")
colnames(riberot) <- c("Geomorphon", "Pixel", "Superficie")
barplot(yvette$Pixel)
barplot(riberot$Pixel)
library(ggplot2)
ggplot(riberot) +
geom_histogram()
riberot
ggplot(riberot) +
geom_histogram(aes(x = Pixel))
riberot
ggplot(riberot) +
geom_histogram(aes(x = Superficie))
ggplot(riberot) +
geom_bar(aes(x = Superficie))
ggplot(riberot) +
geom_bar(aes(x = Pixel))
ggplot(riberot) +
geom_col(aes(x = Pixel))
ggplot(riberot) +
geom_bar(aes(x = Pixel))
library(gtsummary)
tbl_summary(riberot)
ggplot(riberot) +
geom_col()
ggplot(riberot) +
geom_bar()
source("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/RZINE/code_rzine_geomorphon.R", encoding = 'UTF-8', echo=TRUE)
tbl_summary(riberot, include = c("Pixel", "Superficie"))
tbl_summary(riberot, include = c("Pixel", "Superficie"))
riberot
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
colnames(riberot) <- c("Geomorphon", "Pixel", "Superficie")
tbl_summary(riberot, include = c("Pixel", "Superficie"))
list.files()
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/fiche_rzine_geomorphon")
list.files()
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
colnames(riberot) <- c("Geomorphon", "Pixel", "Superficie")
tbl_summary(riberot, include = c("Pixel", "Superficie"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = nom, statistic = list(all_continuous() ~ "{mean}"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = riberot, statistic = list(all_continuous() ~ "{mean}"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = geomorphon, statistic = list(all_continuous() ~ "{mean}"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = geomorphon, statistic = list(all_continuous() ~ "{mean}"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = Geomorphon, statistic = list(all_continuous() ~ "{mean}"))
tbl_summary(riberot, include = c("Pixel", "Superficie"), by = Geomorphon, statistic = list(all_continuous() ~ "{sum}"))
tbl_summary(riberot, include = c("Pixel"), by = Geomorphon, statistic = list(all_continuous() ~ "{sum}"))
riberot
riberot
get_labels()
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Geomorphon,
statistic = list(all_continuous() ~ "{sum}"),
labels()
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Geomorphon,
statistic = list(all_continuous() ~ "{sum}"),
)
theme_gtsummary_language("fr", decimal.mark = "," , big.mark = " ")
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Geomorphon,
statistic = list(all_continuous() ~ "{sum}"),
)
levels(riberot$Geomorphon)
str(riberot)
riberot$Geomorphon <- as.factor(riberot$Geomorphon)
levels(riberot$Geomorphon)
str(riberot)
levels(riberot$Geomorphon)
riberot$Nom <- factor(riberot$Geomorphon,
levels = c("1",  "2",  "3" , "4" , "5"  ,"6" , "7" , "8" , "9"  ,"10"),
labels = c("Plan", "Sommet", "Crête", "Haut de versant", "Eperon", "Pente", "Creux de versant", "Bas de versant", "Vallée", "Dépression"))
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Nom"),
by = Geomorphon,
statistic = list(all_continuous() ~ "{sum}"),
)
str(riberot)
riberot
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Nom"),
by = Geomorphon,
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
add_overall(last = TRUE, col_label = "**Ensemble** (effectif total: {N})")
)
str(riberot)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
statistic = all_categorical() ~ "{p} %  ({n}/{N})"
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = all_categorical() ~ "{p} %  ({n}/{N})"
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
)
levels(riberot$Geomorphon)
table(riberot$Geomorphon)
table(riberot$Geomorphon, riberot$Nom)
summary(riberot$Geomorphon)
summary(riberot$Pixel)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}", "{p}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}", "{n}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}, ({n})"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous2() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_categorical() ~ "{sum}"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_categorical() ~ "{sum} ({n})"),
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}")
)
tbl_summary(riberot,
label = Pixel ~ "Nombre de pixels",
include = c("Pixel"),
by = Nom,
statistic = list(all_continuous() ~ "{sum}"),
add_overall()
)
knitr::opts_chunk$set(echo = TRUE)
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot <- read.csv("data/rapport_geomorphon_riberot_5m_LD100.csv")
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv", sep";")
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot$Geomorphon <- as.factor(riberot$Geomorphon)
riberot <- read.csv("rapport_geomorphon_riberot_5m_LD100.csv")
riberot$Geomorphon <- as.factor(riberot$Geomorphon)
riberot
# Sélection du BV via la GeoJSON ----
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/RZINE")
bv <- st_read("BassinVersantTopographique.json")
riberot <- bv %>% filter(bv$TopoOH == "La Séveraisse du torrent de Navette au Drac")
riberot_proj <- st_transform(riberot, 2154)
plot(riberot_proj)
st_write(riberot_proj, paste0(getwd(), "/", "severaisse.shp"))
riberot_shp <- st_read("severaisse.shp")
plot(riberot_shp)
# Création du raster virtuel Drac ----
setwd("C:/Users/thier/Downloads/mnt_05")
c <- "C:/Users/thier/Downloads/mnt_05"
v <- "C:/Users/thier/Downloads/new.vrt" # name of virtual raster
ras_lst <- list.files(c, full.names = T, pattern = ".asc$", recursive=T) # sélection de toutes les dalles
head(ras_lst)
terra::vrt(ras_lst, v, overwrite = T) # création du raster virtuel
ras <- read_stars(v)
st_crs(ras) = "EPSG:2154" # à faire ?
plot(ras, main = "dep 05")
plot(riberot_shp, add=T, col="red")
plot(riberot_shp)
plot(ras, main = "dep 05")
ras
mnt <- st_crop(ras, riberot_shp)
plot(mnt)
write_stars(mnt,"mnt_severaisse.tif")
mnt <- raster("mnt_severaisse.tif")
plot(mnt, main="Severaisse")
## Traitement Geomorphons ----
dem_geomorphons = qgis_run_algorithm("saga:geomorphons", # attention, il faut que l'extension soit active dans QGIS
DEM = mnt,
THRESHOLD = 1,
RADIUS = 100,
METHOD = 1,
GEOMORPHONS = paste0("geomorphon_severaisse_5m_LD100",".tif"))
geomorphon <- raster("geomorphon_severaisse_5m_LD100.tif")
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_severaisse_5m_LD100_",".csv"))
# Sélection du BV via la GeoJSON ----
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/RZINE")
bv <- st_read("BassinVersantTopographique.json")
riberot <- bv %>% filter(bv$TopoOH == "La Tarentaine (Trentaine) de sa source au confluent de l'Eau Verte")
riberot_proj <- st_transform(riberot, 2154)
plot(riberot_proj)
st_write(riberot_proj, paste0(getwd(), "/", "tarentaine.shp"))
riberot_shp <- st_read("tarentaine.shp")
plot(riberot_shp)
setwd("~/OT/GEO/GEO/MASTER/M2/SPATIAL_TREE_P/R/fiche_rzine_geomorphon/data")
list.files()
geomorphon <- raster("data/geomorphon_tarentaine_5m_LD100.tif")
geomorphon <- raster("geomorphon_tarentaine_5m_LD100.tif")
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_riberot_5m_LD100", ".csv"))
report_geomorphons = qgis_run_algorithm("native:rasterlayeruniquevaluesreport",
INPUT = geomorphon,
BAND = 1,
OUTPUT_TABLE = paste0("rapport_geomorphon_tarentaine_5m_LD100", ".csv"))
